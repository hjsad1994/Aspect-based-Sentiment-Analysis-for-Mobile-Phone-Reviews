================================================================================
SHIPPING COLUMN FIX - SUMMARY
================================================================================

ISSUE:
When running json_to_csv.py with Phase1-SubPhase2.json or Phase1-SubPhase3.json,
the "shipping" column was appearing as null/empty.

ROOT CAUSE:
The JSON files contained both "Shipping" (capitalized) and "shipping" (lowercase)
keys in different records. The original script was:
1. Creating separate columns for both variations
2. Not properly merging the values from both keys
3. Resulting in data being split between two columns or lost

SOLUTION:
Updated json_to_csv.py to:

1. Normalize keys during collection (case-insensitive):
   - Create mapping from lowercase key -> preferred key
   - Prefer capitalized versions (Shipping over shipping)
   - Avoid duplicate columns with different cases

2. Merge values when both keys exist:
   - When a record has both "Shipping" and "shipping"
   - Prioritize non-empty values
   - Ensure no data is lost during normalization

3. Maintain consistency:
   - All output uses single column name "Shipping"
   - All data from "shipping" or "Shipping" merged into one column

VERIFICATION RESULTS:

Phase1-SubPhase2.json:
  - Total rows: 600
  - Shipping non-empty values: 121 ✓ (was 0 before)
  - Columns: 21 (no duplicate Shipping/shipping)

Phase1-SubPhase3.json:
  - Total rows: 600  
  - Shipping non-empty values: 109 ✓ (was 0 before)
  - Columns: 21 (no duplicate Shipping/shipping)

AFFECTED FILES:
  Modified: D:/AI_Tranning/ai_training/scripts/json_to_csv.py

KEY CHANGES IN json_to_csv.py:
  1. Added case-insensitive key mapping during collection
  2. Prioritize capitalized key names (Shipping > shipping)
  3. Merge values from all case variants of same key
  4. Prioritize non-empty values when merging

STATUS: ✓ FIXED AND VERIFIED
Date: 2025-10-03

The script now properly handles:
- Mixed case column names in JSON
- Merging duplicate columns with different cases
- Preserving all data during conversion
- Prioritizing non-empty values
================================================================================
